%YAML 1.2

---


repos:


  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-case-conflict
      - id: check-merge-conflict
        # exclude files where underlines are not distinguishable from merge conflicts
        exclude: /README\.rst$|^docs/.*\.rst$
      - id: check-symlinks
      - id: check-xml
      - id: check-yaml
        exclude: ^.drone\.yml|meta.yaml
      - id: mixed-line-ending
        args: ["--fix=lf"]


  - repo: https://github.com/adrienverge/yamllint
    rev: v1.35.1
    hooks:
      - id: yamllint
        args:
          - --strict


  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.9.10  # Keep in sync with `poetry.lock` and `pyproject.toml`
    hooks:
      # For the `ruff` hook (which runs `ruff check`),
      # we purposefully skip the `--fix` option,
      # and recommend running a command like `poetry run ruff check --fix` instead.
      - id: ruff
      - id: ruff-format


  - repo: https://github.com/hukkin/mdformat
    rev: 0.7.22
    hooks:
      - id: mdformat
        additional_dependencies:
          - mdformat-ruff
          - mdformat-tables


  - repo: https://github.com/python-poetry/poetry
    rev: 2.1.3
    hooks:

      # Equivalent to running `poetry check --lock`.
      # This checks that:
      # 1. the Poetry content of the `pyproject.toml` file is valid;
      # 2. there is a `poetry.lock` file;
      # 3. the content of `poetry.lock` is in sync with the content of `pyproject.toml`.
      - id: poetry-check
        args:
          - --lock

      # Equivalent to running `poetry lock`.
      # This syncs the `poetry.lock` file with the content of the `pyproject.toml` file.
      # This hook fails if it results in modifying `poetry.lock`.
      - id: poetry-lock


...
